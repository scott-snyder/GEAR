Bottom: 965d9bdbb29ba462dd978ca31e6071ffccf7dfdd
Top:    cc340034d17d7b1f6e62d548808ec268bdc2da96
Author: scott snyder <sss@karma>
Date:   2020-02-01 20:58:27 -0500

Fix warnings.


---

diff --git a/src/gearimpl/FixedPadSizeDiskLayout.cc b/src/gearimpl/FixedPadSizeDiskLayout.cc
index bff31d1..2a45de7 100644
--- a/src/gearimpl/FixedPadSizeDiskLayout.cc
+++ b/src/gearimpl/FixedPadSizeDiskLayout.cc
@@ -173,7 +173,7 @@ namespace gear {
       return _padWidth / _rows.at( rowNum ).RCenter ;
 
     }
-    catch(std::out_of_range){
+    catch(const std::out_of_range&){
       return 0. ;
     }
   }
@@ -188,7 +188,7 @@ namespace gear {
 	return _rows.at( rowNum ).PhiPad;
 
     }
-    catch(std::out_of_range){
+    catch(const std::out_of_range&){
       return 0. ;
     }
   }
diff --git a/src/gearimpl/GearMgrImpl.cc b/src/gearimpl/GearMgrImpl.cc
index 5f834f7..11c6ec1 100644
--- a/src/gearimpl/GearMgrImpl.cc
+++ b/src/gearimpl/GearMgrImpl.cc
@@ -467,7 +467,7 @@ namespace gear{
 
       lcalParameters->getDoubleVal("beam_crossing_angle") ;
 
-    }catch( UnknownParameterException ){
+    }catch( const UnknownParameterException& ){
 
       std::cout << "WARNING GearMgrImpl::setLcalParameters: added "
 	" missing parameter beam_crossing_angle 0.0 ! " << std::endl ;
@@ -488,7 +488,7 @@ namespace gear{
 
       lhcalParameters->getDoubleVal("beam_crossing_angle") ;
 
-    }catch( UnknownParameterException ){
+    }catch( const UnknownParameterException& ){
 
     std::cout << "WARNING GearMgrImpl::setLHcalParameters: added "
 	" missing parameter beam_crossing_angle 0.0 ! " << std::endl ;
@@ -509,7 +509,7 @@ namespace gear{
 
       beamcalParameters->getDoubleVal("beam_crossing_angle") ;
 
-    }catch( UnknownParameterException ){
+    }catch( const UnknownParameterException& ){
 
       std::cout << "WARNING GearMgrImpl::setBeamCalParameters: added "
 	" missing parameter beam_crossing_angle 0.0 ! " << std::endl ;
diff --git a/src/gearxml/GearParametersXML.cc b/src/gearxml/GearParametersXML.cc
index ad764ad..573751e 100644
--- a/src/gearxml/GearParametersXML.cc
+++ b/src/gearxml/GearParametersXML.cc
@@ -233,7 +233,7 @@ namespace gear {
 	
 	value = getXMLAttribute( par , "value" )  ; 
       }      
-      catch( ParseException ) {
+      catch( const ParseException& ) {
 	
 	if( par->FirstChild() )
 	  value =  par->FirstChild()->Value() ;
diff --git a/src/gearxml/GearXML.cc b/src/gearxml/GearXML.cc
index 747f76e..15d59f8 100644
--- a/src/gearxml/GearXML.cc
+++ b/src/gearxml/GearXML.cc
@@ -68,7 +68,7 @@ namespace gear{
 
     try{   detName = mgr->getDetectorName()  ;
     }
-    catch( UnknownParameterException ){}
+    catch( const UnknownParameterException& ){}
 
     global.SetAttribute( "detectorName" , detName ) ;
     
diff --git a/src/gearxml/tinyxmlparser.cc b/src/gearxml/tinyxmlparser.cc
index 8731850..4f76da9 100644
--- a/src/gearxml/tinyxmlparser.cc
+++ b/src/gearxml/tinyxmlparser.cc
@@ -1,6 +1,6 @@
 /*
 www.sourceforge.net/projects/tinyxml
-Original code (2.0 and earlier )copyright (c) 2000-2002 Lee Thomason (www.grinninglizard.com)
+Original code (2.0 and earlier )copyright (c) 2000-2002, 2020 Lee Thomason (www.grinninglizard.com)
 
 This software is provided 'as-is', without any express or implied 
 warranty. In no event will the authors be held liable for any 
@@ -110,14 +110,17 @@ void TiXmlBase::ConvertUTF32ToUTF8( unsigned long input, char* output, int* leng
 			--output; 
 			*output = (char)((input | BYTE_MARK) & BYTE_MASK); 
 			input >>= 6;
+                        // FALLTHROUGH
 		case 3:
 			--output; 
 			*output = (char)((input | BYTE_MARK) & BYTE_MASK); 
 			input >>= 6;
+                        // FALLTHROUGH
 		case 2:
 			--output; 
 			*output = (char)((input | BYTE_MARK) & BYTE_MASK); 
 			input >>= 6;
+                        // FALLTHROUGH
 		case 1:
 			--output; 
 			*output = (char)(input | FIRST_BYTE_MARK[*length]);
diff --git a/src/test/testGearTGeo.cc b/src/test/testGearTGeo.cc
index 71b4adb..27bbc02 100644
--- a/src/test/testGearTGeo.cc
+++ b/src/test/testGearTGeo.cc
@@ -88,7 +88,7 @@ int main(int argc, char**argv){
       std::cout <<i<<" "<< volNames[i]<<" "<<matNames[i] << std::endl;
       
   }
-  catch(NotImplementedException e){}
+  catch(const NotImplementedException& e){}
   
  
 
diff --git a/src/test/testMaterialBudget.cc b/src/test/testMaterialBudget.cc
index c56a762..6f5f3c1 100644
--- a/src/test/testMaterialBudget.cc
+++ b/src/test/testMaterialBudget.cc
@@ -175,7 +175,7 @@ int main(int argc, char**argv){
 	
       }
   }
-  catch(NotImplementedException e){}
+  catch(const NotImplementedException& e){}
   
 } 
 
diff --git a/src/test/testMaterialMap.cc b/src/test/testMaterialMap.cc
index 630f646..fd52904 100644
--- a/src/test/testMaterialMap.cc
+++ b/src/test/testMaterialMap.cc
@@ -82,7 +82,7 @@ int main(int argc, char**argv){
 	  }
       }
   }
-  catch(NotImplementedException e){}
+  catch(const NotImplementedException& e){}
   
  
 
diff --git a/src/test/testgear.cc b/src/test/testgear.cc
index edd7e91..bf865b9 100644
--- a/src/test/testgear.cc
+++ b/src/test/testgear.cc
@@ -1,4 +1,4 @@
-
+#undef NDEBUG
 #include "gearimpl/FixedPadSizeDiskLayout.h"
 #include "gearimpl/Util.h"
 #include "gearxml/GearXML.h"
diff --git a/src/test/testtpcproto.cc b/src/test/testtpcproto.cc
index 18fde8b..52c5b85 100644
--- a/src/test/testtpcproto.cc
+++ b/src/test/testtpcproto.cc
@@ -1,3 +1,4 @@
+#undef NDEBUG
 #include "gearimpl/RectangularPadRowLayout.h"
 #include "gearimpl/Util.h"
 #include "gearxml/GearXML.h"
